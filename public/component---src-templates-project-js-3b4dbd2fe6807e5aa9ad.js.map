{"version":3,"sources":["webpack:///./src/templates/project.js","webpack:///./src/static_queries/useProjectData.js"],"names":["Project","props","data","markdownRemark","frontmatter","html","timeToRead","wordCount","fields","allProjectData","useProjectData","nextProject","slug","map","project","node","indexOf","undefined","getNextSlug","prevProject","length","getPrevSlug","page","title","oGraphUrl","hero_image","publicURL","className","fluid","childImageSharp","alt","kicker","date","words","id","dangerouslySetInnerHTML","__html","href","getProjectData","useStaticQuery","allMarkdownRemark","edges"],"mappings":"uRAQe,SAASA,EAAQC,GAAQ,IAAD,EAOjCA,EAAMC,KAAKC,eALbC,EAFmC,EAEnCA,YACAC,EAHmC,EAGnCA,KACAC,EAJmC,EAInCA,WACAC,EALmC,EAKnCA,UACAC,EANmC,EAMnCA,OAEIC,EAAiBC,cACjBC,EAGN,SAAqBC,GACnB,IAAMD,EACJF,EACEA,EACGI,KAAI,SAAAC,GACH,OAAOA,EAAQC,KAAKP,OAAOI,QAE5BI,QAAQJ,GAAQ,GAEvB,OAAID,QAAgDM,IAAjCN,EAAYI,KAAKP,OAAOI,KAClCD,EAEAF,EAAe,GAfNS,CAAYV,EAAOI,MACjCO,EAkBN,SAAqBP,GACnB,IAAMO,EACJV,EACEA,EACGI,KAAI,SAAAC,GACH,OAAOA,EAAQC,KAAKP,OAAOI,QAE5BI,QAAQJ,GAAQ,GAEvB,OAAIO,QAAgDF,IAAjCE,EAAYJ,KAAKP,OAAOI,KAClCO,EAEAV,EAAeA,EAAeW,OAAS,GA9B9BC,CAAYb,EAAOI,MAkCvC,OACE,YAAC,IAAD,CACEU,KAAK,UACLC,MAAOnB,EAAYmB,MACnBC,UAAWpB,EAAYqB,WAAWC,UAClCd,KAAMJ,EAAOI,MAEb,2BACE,mBAAKe,UAAU,0DACb,0BACE,YAAC,IAAD,CACEC,MAAOxB,EAAYqB,WAAWI,gBAAgBD,MAC9CE,IAAK1B,EAAYmB,SAIrB,uBACE,kBAAII,UAAU,8BAA8BvB,EAAYmB,OACxD,kBAAII,UAAU,6BAA6BvB,EAAY2B,QACvD,mBAAKJ,UAAU,oCACZvB,EAAY4B,KADf,MAC6B1B,EAD7B,iBAC4D,IACzDC,EAAU0B,MAFb,WAKF,mBACEC,GAAG,cACHP,UAAU,oCACVQ,wBAAyB,CAAEC,OAAQ/B,KAGrC,mBAAKsB,UAAU,4CACb,iBAAGU,KAAI,iBAAmBlB,EAAYJ,KAAKP,OAAOI,MAAlD,KACUO,EAAYJ,KAAKX,YAAYmB,OAGvC,iBAAGc,KAAI,iBAAmB1B,EAAYI,KAAKP,OAAOI,MAC/CD,EAAYI,KAAKX,YAAYmB,MADhC,SAON,mBAAKI,UAAU,6EACb,YAAC,IAAD,QAQD,IAAMW,EAAc,c,kCCvG3B,kDAEe,SAAS5B,IAuCtB,OAtCa6B,YAAe,cAsChBC,kBAAkBC","file":"component---src-templates-project-js-3b4dbd2fe6807e5aa9ad.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport useProjectData from \"../static_queries/useProjectData\"\nimport SignUpForm from \"./../components/SignUpForm\"\n\nimport Img from \"gatsby-image\"\n\nexport default function Project(props) {\n  const {\n    frontmatter,\n    html,\n    timeToRead,\n    wordCount,\n    fields,\n  } = props.data.markdownRemark\n  const allProjectData = useProjectData()\n  const nextProject = getNextSlug(fields.slug)\n  const prevProject = getPrevSlug(fields.slug)\n\n  function getNextSlug(slug) {\n    const nextProject =\n      allProjectData[\n        allProjectData\n          .map(project => {\n            return project.node.fields.slug\n          })\n          .indexOf(slug) + 1\n      ]\n    if (nextProject && nextProject.node.fields.slug !== undefined) {\n      return nextProject\n    } else {\n      return allProjectData[0]\n    }\n  }\n\n  function getPrevSlug(slug) {\n    const prevProject =\n      allProjectData[\n        allProjectData\n          .map(project => {\n            return project.node.fields.slug\n          })\n          .indexOf(slug) - 1\n      ]\n    if (prevProject && prevProject.node.fields.slug !== undefined) {\n      return prevProject\n    } else {\n      return allProjectData[allProjectData.length - 1]\n    }\n  }\n\n  return (\n    <Layout\n      page=\"project\"\n      title={frontmatter.title}\n      oGraphUrl={frontmatter.hero_image.publicURL}\n      slug={fields.slug}\n    >\n      <article>\n        <div className=\"py-20 w-full md:px-10 lg:px-20 max-w-screen-xl mx-auto\">\n          <figure>\n            <Img\n              fluid={frontmatter.hero_image.childImageSharp.fluid}\n              alt={frontmatter.title}\n            />\n          </figure>\n\n          <div>\n            <h1 className=\"text-6xl font-display pt-2\">{frontmatter.title}</h1>\n            <h2 className=\"font-sans text-2xl italic\">{frontmatter.kicker}</h2>\n            <div className=\"font-sans uppercase text-xs py-2\">\n              {frontmatter.date} &bull; {timeToRead} minute read &bull;{\" \"}\n              {wordCount.words} words\n            </div>\n          </div>\n          <div\n            id=\"projectHtml\"\n            className=\"text-l font-serif leading-8 my-10\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          ></div>\n\n          <div className=\"w-full flex justify-between items-center\">\n            <a href={`../../projects${prevProject.node.fields.slug}`}>\n              &larr; {prevProject.node.frontmatter.title}\n            </a>\n\n            <a href={`../../projects${nextProject.node.fields.slug}`}>\n              {nextProject.node.frontmatter.title} &rarr;\n            </a>\n          </div>\n        </div>\n      </article>\n\n      <div className=\"bg-seashell w-4/5 md:w-3/5 xl:w-2/5 p-10 mb-20 mx-auto rounded font-serif\">\n        <SignUpForm />\n      </div>\n    </Layout>\n  )\n}\n\n//dynamic page query, must occur within each post context\n//$slug is made available by context from createPages call in gatsby-node.js\nexport const getProjectData = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        author\n        date(formatString: \"MMMM Do, YYYY\")\n        kicker\n        hero_image {\n          childImageSharp {\n            fluid(maxWidth: 1500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n          publicURL\n        }\n      }\n      excerpt\n      html\n      timeToRead\n      wordCount {\n        words\n      }\n    }\n  }\n`\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport default function useProjectData() {\n  const data = useStaticQuery(graphql`\n    query getProjectData {\n      allMarkdownRemark(\n        filter: { frontmatter: { posttype: { in: [\"project\"] } } }\n      ) {\n        edges {\n          node {\n            id\n            excerpt\n            frontmatter {\n              author\n              date(formatString: \"MMMM Do, YYYY\")\n              title\n              github_url\n              demo_url\n              skills {\n                id\n                icon\n                icon_prefix\n              }\n              kicker\n              hero_image {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            html\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n  return data.allMarkdownRemark.edges\n}\n"],"sourceRoot":""}