{"version":3,"sources":["webpack:///./src/components/BlogPreview.js","webpack:///./src/components/BlogList.js","webpack:///./src/static_queries/useBlogData.js","webpack:///./src/pages/blog.js"],"names":["BlogPreview","props","post","node","frontmatter","excerpt","timeToRead","wordCount","fields","className","href","slug","title","date","words","BlogList","posts","useBlogData","map","key","id","useStaticQuery","allMarkdownRemark","edges","Blog","blogData","useSiteMetadata","subtitle","intro","colors","page","colorClasses","bgColor"],"mappings":"+KAEe,SAASA,EAAYC,GAAQ,IAAD,EAOrCA,EAAMC,KAAKC,KALbC,EAFuC,EAEvCA,YACAC,EAHuC,EAGvCA,QACAC,EAJuC,EAIvCA,WACAC,EALuC,EAKvCA,UACAC,EANuC,EAMvCA,OAEF,OACE,uBAASC,UAAU,iDACjB,mBAAKA,UAAU,mCACb,iBAAGC,KAAI,IAAMF,EAAOG,MAASP,EAAYQ,QAE3C,mBAAKH,UAAU,oCACZL,EAAYS,KADf,MAC6BP,EAD7B,qBACgE,IAC7DC,EAAUO,MAFb,UAIA,mBAAKL,UAAU,qBAAqBJ,GACpC,uBACE,iBAAGK,KAAI,IAAMF,EAAOG,KAAQF,UAAU,wBAAtC,eCjBO,SAASM,EAASd,GAC/B,IAAIe,EAAQC,cAEZ,OACE,uBAASR,UAAU,yDACjB,kBAAIA,UAAU,0CAAd,YACA,mBAAKA,UAAU,8BACZO,EAAME,KAAI,SAAAhB,GAAI,OACb,YAACF,EAAD,CAAaE,KAAMA,EAAMiB,IAAKjB,EAAKC,KAAKiB,Y,kCCZlD,kDAEe,SAASH,IAqCtB,OApCaI,YAAe,cAoChBC,kBAAkBC,Q,6HClBjBC,UAff,SAAcvB,GAAQ,IACZwB,EAAaC,cAAbD,SACAb,EAAmCa,EAAnCb,MAAOe,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,MAAOC,EAAWJ,EAAXI,OAChC,OACE,YAAC,IAAD,CAAQC,KAAK,OAAOlB,MAAOA,EAAOmB,aAAcF,GAC9C,uBAASpB,UAAWoB,GAClB,YAAC,IAAD,CAAUjB,MAAOA,EAAOe,SAAUA,EAAUC,MAAOA,KAErD,2BACE,YAAC,IAAD,CAAUI,QAAQ","file":"component---src-pages-blog-js-9f06bf8dde508c6f546f.js","sourcesContent":["import React from \"react\"\n\nexport default function BlogPreview(props) {\n  const {\n    frontmatter,\n    excerpt,\n    timeToRead,\n    wordCount,\n    fields,\n  } = props.post.node\n  return (\n    <article className=\"max-w-screen md:w-3/5 mx-auto text-left pb-10\">\n      <div className=\"font-display font-bold text-2xl\">\n        <a href={`.${fields.slug}`}>{frontmatter.title}</a>\n      </div>\n      <div className=\"font-sans uppercase text-xs py-2\">\n        {frontmatter.date} &bull; {timeToRead} minutes to read &bull;{\" \"}\n        {wordCount.words} words\n      </div>\n      <div className=\"font-serif text-m\">{excerpt}</div>\n      <div>\n        <a href={`.${fields.slug}`} className=\"font-serif underline\">\n          Read More\n        </a>\n      </div>\n    </article>\n  )\n}\n","import React from \"react\"\nimport useBlogData from \"../static_queries/useBlogData\"\nimport BlogPreview from \"./BlogPreview\"\n\nexport default function BlogList(props) {\n  let posts = useBlogData()\n\n  return (\n    <section className=\"bg-morning-blue text-seashell bg-cover w-screen py-20\">\n      <h2 className=\"font-display text-center text-4xl py-5\">Articles</h2>\n      <div className=\"text-center px-10 bg-cover\">\n        {posts.map(post => (\n          <BlogPreview post={post} key={post.node.id} />\n        ))}\n      </div>\n    </section>\n  )\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport default function useBlogData() {\n  const data = useStaticQuery(graphql`\n    query getBlogData {\n      allMarkdownRemark(\n        filter: { frontmatter: { posttype: { in: [\"post\"] } } }\n      ) {\n        edges {\n          node {\n            id\n            html\n            excerpt(pruneLength: 200)\n            frontmatter {\n              author\n              date(formatString: \"MMMM Do, YYYY\")\n              title\n              kicker\n              hero_image {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            timeToRead\n            wordCount {\n              words\n            }\n\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n  return data.allMarkdownRemark.edges\n}\n","import React from \"react\"\nimport Layout from \"./../components/Layout\"\nimport BlogList from \"./../components/BlogList\"\nimport PageMast from \"./../components/PageMast\"\nimport useSiteMetadata from \"../static_queries/useSiteMetadata\"\n\nfunction Blog(props) {\n  const { blogData } = useSiteMetadata()\n  const { title, subtitle, intro, colors } = blogData\n  return (\n    <Layout page=\"blog\" title={title} colorClasses={colors}>\n      <section className={colors}>\n        <PageMast title={title} subtitle={subtitle} intro={intro} />\n      </section>\n      <section>\n        <BlogList bgColor=\"seashell\" />\n      </section>\n    </Layout>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}